import { GoogleGenAI, type ContentListUnion, type ContentUnion, type File } from "@google/genai";

export interface IGeminiClient {
  generateText: (contents: ContentListUnion) => Promise<string>;
}

export class GeminiClient implements IGeminiClient {
  private client: GoogleGenAI;

  constructor(apiKey: string) {
    this.client = new GoogleGenAI({ apiKey });
  }

  async generateText(contents: ContentListUnion): Promise<string> {
    const response = await this.client.models.generateContent({
      contents,
      model: "gemini-2.0-flash",
      config: { 
        tools: [{
          googleSearch: {}
        }],
        systemInstruction: [
          "You are a helpful assistant that answers questions and queries using search tool where applicable.",
          "When interacting with the user, you should predict the user's intent and provide relevant information and follow-up suggestions.",
        ]
      }
    });
    if (!response.text) {
      throw new Error("No text generated by Gemini model");
    }
    return response.text;
  }
}
